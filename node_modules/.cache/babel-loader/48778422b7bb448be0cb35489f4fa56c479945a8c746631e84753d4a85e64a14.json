{"ast":null,"code":"var _jsxFileName = \"/home/oia/Downloads/Sprints/Model answer/Todo app react/Final answer/Todo-App-React/Todo-App-React/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoApp = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const addTaskToArray = taskText => {\n    const newTask = {\n      id: Date.now(),\n      title: taskText,\n      completed: false\n    };\n    setTasks(prevTasks => [...prevTasks, newTask]);\n    setInputValue(\"\");\n    setErrorMessage(\"\"); // Clear the error message on successful add\n  };\n  const handleAddTask = () => {\n    if (inputValue.trim() === \"\") {\n      setErrorMessage(\"The input field is empty! You should enter something!\"); // Show error message\n    } else {\n      addTaskToArray(inputValue.trim());\n    }\n  };\n  const deleteTaskById = taskId => {\n    setTasks(prevTasks => prevTasks.filter(task => task.id !== taskId));\n  };\n  const markTaskCompleted = (tasks, taskId) => {\n    if (!tasks.length) return [];\n    const [first, ...rest] = tasks;\n    if (first.id === taskId) {\n      return [{\n        ...first,\n        completed: !first.completed\n      }, ...markTaskCompleted(rest, taskId)];\n    }\n    return [first, ...markTaskCompleted(rest, taskId)];\n  };\n  const handleTaskClick = (e, taskId) => {\n    if (e.target.classList.contains(\"del\")) {\n      deleteTaskById(taskId);\n    } else {\n      setTasks(prevTasks => markTaskCompleted(prevTasks, taskId));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"input\",\n        value: inputValue,\n        onChange: e => setInputValue(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add\",\n        onClick: handleAddTask,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tasks\",\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `task ${task.completed ? \"done\" : \"\"}`,\n        onClick: e => handleTaskClick(e, task.id),\n        children: [task.title, /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"del\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoApp, \"BFHDaE1m/3gO5GyVTGCWfDPPZR8=\");\n_c = TodoApp;\nexport default TodoApp;\nvar _c;\n$RefreshReg$(_c, \"TodoApp\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TodoApp","_s","tasks","setTasks","inputValue","setInputValue","errorMessage","setErrorMessage","addTaskToArray","taskText","newTask","id","Date","now","title","completed","prevTasks","handleAddTask","trim","deleteTaskById","taskId","filter","task","markTaskCompleted","length","first","rest","handleTaskClick","e","target","classList","contains","className","children","type","value","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","_c","$RefreshReg$"],"sources":["/home/oia/Downloads/Sprints/Model answer/Todo app react/Final answer/Todo-App-React/Todo-App-React/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport './App.css';\n\nconst TodoApp = () => {\n  const [tasks, setTasks] = useState([]);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\"); \n\n  const addTaskToArray = (taskText) => {\n    const newTask = {\n      id: Date.now(),\n      title: taskText,\n      completed: false,\n    };\n    setTasks((prevTasks) => [...prevTasks, newTask]);\n    setInputValue(\"\");\n    setErrorMessage(\"\"); // Clear the error message on successful add\n  };\n\n  const handleAddTask = () => {\n    if (inputValue.trim() === \"\") {\n      setErrorMessage(\"The input field is empty! You should enter something!\"); // Show error message\n    } else {\n      addTaskToArray(inputValue.trim());\n    }\n  };\n\n  const deleteTaskById = (taskId) => {\n    setTasks((prevTasks) => prevTasks.filter((task) => task.id !== taskId));\n  };\n\n  const markTaskCompleted = (tasks, taskId) => {\n    if (!tasks.length) return [];\n    const [first, ...rest] = tasks;\n    if (first.id === taskId) {\n      return [{ ...first, completed: !first.completed }, ...markTaskCompleted(rest, taskId)];\n    }\n    return [first, ...markTaskCompleted(rest, taskId)];\n  };\n\n  const handleTaskClick = (e, taskId) => {\n    if (e.target.classList.contains(\"del\")) {\n      deleteTaskById(taskId);\n    } else {\n      setTasks((prevTasks) => markTaskCompleted(prevTasks, taskId));\n    }\n  };\n\n  return (\n    <div className=\"todo-app\">\n      <div className=\"input-container\">\n        <input\n          type=\"text\"\n          className=\"input\"\n          value={inputValue}\n          onChange={(e) => setInputValue(e.target.value)}\n        />\n        <button className=\"add\" onClick={handleAddTask}>\n          Add\n        </button>\n      </div>\n      {errorMessage && <div className=\"error-message\">{errorMessage}</div>}\n      <div className=\"tasks\">\n        {tasks.map((task) => (\n          <div\n            key={task.id}\n            className={`task ${task.completed ? \"done\" : \"\"}`}\n            onClick={(e) => handleTaskClick(e, task.id)}\n          >\n            {task.title}\n            <span className=\"del\">Delete</span>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default TodoApp;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}